---
interface Props {
  href?: string;
  external?: boolean;
  class?: string;
  backgroundColor?: 'primary' | 'accent' | 'iconColor';
  type?: 'submit' | 'button' | 'reset';
  isButton?: boolean;
}

const { 
  href,
  external = false,
  class: className = '',
  backgroundColor = 'primary',
  type = 'button',
  isButton = false
} = Astro.props;

const externalProps = external ? {
  target: "_blank",
  rel: "noopener noreferrer"
} : {};

const bgColorMap = {
  primary: 'bg-primary bg-opacity-30',
  accent: 'bg-accent bg-opacity-30',
  iconColor: 'bg-iconColor'
};

const bgColorClass = bgColorMap[backgroundColor];
const baseClasses = [
  bgColorClass,
  "px-6 py-3 rounded-full no-underline-link flex items-center gap-2 transition-all duration-300 ease-in-out",
  "relative overflow-hidden group",
  className
];
---

{isButton ? (
  <button 
    type={type}
    class:list={baseClasses}
  >
    <span class="absolute inset-0 w-0 bg-[#F8DC6F] transition-all duration-300 ease-in-out group-hover:w-full"></span>
    <span class="relative z-10 flex items-center gap-2 transition-transform duration-300 ease-in-out group-hover:translate-x-2 font-semibold">
      <slot />
      <span class="text-lg transition-transform duration-300 ease-in-out group-hover:translate-x-1">→</span>
    </span>
  </button>
) : (
  <a 
    href={href}
    class:list={baseClasses}
    {...externalProps}
  >
    <span class="absolute inset-0 w-0 bg-[#F8DC6F] transition-all duration-300 ease-in-out group-hover:w-full"></span>
    <span class="relative z-10 flex items-center gap-2 transition-transform duration-300 ease-in-out group-hover:translate-x-2 font-semibold">
      <slot />
      <span class="text-lg transition-transform duration-300 ease-in-out group-hover:translate-x-1">→</span>
    </span>
  </a>
)} 